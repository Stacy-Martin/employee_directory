{"version":3,"sources":["components/Search.js","components/TableRows.js","utils/API.js","components/Table.js","components/Header.js","components/Wrapper.js","App.js","reportWebVitals.js","index.js"],"names":["Search","search","setSearch","className","type","placeholder","aria-label","results","onChange","e","target","value","Table","fetchEmpData","fetch","rootElement","document","getElementById","ReactDOM","render","App","props","Header","Wrapper","useState","setUsers","isSorted","filtered","useEffect","API","then","res","console","log","handleInputChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"oOAqBeA,MAnBf,YAAwC,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UACxB,OACE,uBAAMC,UAAU,mCAAhB,UACE,uBACEA,UAAU,wBACVC,KAAK,SACLC,YAAY,SACZC,aAAW,SAEXC,QAASN,EAETO,SAAU,SAAAC,GAAC,OAAIP,EAAUO,EAAEC,OAAOC,UAEpC,wBAAQR,UAAU,0BAA0BC,KAAK,SAAjD,wB,kBCNSQ,ICFAC,EANM,WAGnB,OAAOC,MADL,2E,MC2DF,IAAMC,EAAcC,SAASC,eAAe,QAE5CC,IAASC,OAAO,cAACC,IAAD,IAASL,GAEVH,MArDjB,SAAgBS,KCADC,MAXf,WACI,OACI,sBAAKnB,UAAU,YAAf,UACI,oBAAIA,UAAU,wBAAd,gCACA,mBAAGA,UAAU,OAAb,iECiDGoB,MA7Cf,SAAkBF,GAGlB,MAA0BG,mBAAS,IAAnC,mBAAcC,GAAd,WACA,EAAgCD,oBAAS,GAAzC,mBAAOE,EAAP,KACA,GADA,KACgCF,mBAAS,KAAzC,mBAAOG,EAAP,KACA,GADA,KAC4BH,mBAAS,KAArC,mBAAOvB,EAAP,KAAeC,EAAf,KA8BA,OA1BA0B,qBAAU,WACVC,EAAIhB,eAAeiB,MAAK,SAACC,GACrBC,QAAQC,IAAIF,GACZN,EAASM,QAGV,IAKHH,qBAAU,cAEP,CAACF,IAGJE,qBAAU,cAEP,CAACD,IASF,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQpB,QAASN,EAAQiC,kBARP,WAClBhC,OASA,cAAC,EAAD,QCxCWkB,MANf,WACE,OACI,cAAC,EAAD,KCMSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdlB,IAASC,OACP,cAAC,IAAMwB,WAAP,UACE,cAAC,EAAD,MAEF3B,SAASC,eAAe,SAM1BkB,M","file":"static/js/main.76c6d1a5.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Search({ search, setSearch }) {\n  return (\n    <form className=\"bg-light justify-content-between\">\n      <input\n        className=\"form-inline empSearch\"\n        type=\"search\"\n        placeholder=\"Search\"\n        aria-label=\"Search\"\n        // results, name or value here ??\n        results={search}\n        // on click ?? or what here ??\n        onChange={e => setSearch(e.target.value)}\n      />\n      <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n      {/* button type supposed to be button or submit? */}\n    </form>\n  );\n}\n\nexport default Search;","import React, { useState, useEffect } from \"react\";\n\nfunction Table (props) {\n\n\n}\n\n\n\nexport default Table;","// fetch data from the api\nconst fetchEmpData = () => {\n  const empInfo =\n    \"https://randomuser.me/api/?inc=name,email,phone,picture,nat&results=15\";\n  return fetch(empInfo);\n};\n\nexport default fetchEmpData;\n","// using example from React data table sandbox\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport DataTable from \"react-data-table-component\";\nimport Card from \"@material-ui/core/Card\";\nimport SortIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport TableRows from \"./TableRows\"\nimport API from \"../utils/API.js\"\nimport \"./style.css\";\n\n//map over tablerows depending on props.users ??\nfunction Table (props) {\n    \nconst columns = [\n    {\n        name: \"Picture\",\n        selector: \"picture\",\n        sortable: false,\n    },\n    {\n        name: \"Name\",\n        selector: \"name\",\n        sortable: true,\n    },\n    {\n        name: \"email\",\n        selector: \"email\",\n        sortable: false,  },\n    {\n        name: \"Phone Number\",\n        selector: \"phone\",\n        sortable: false,\n    },\n    {\n        name: \"Nationality\",\n        selector: \"nat\",\n        sortable: true,\n    },\n    ];\n\nfunction App() {\n    return (\n        <div className=\"App\">\n        <Card>\n            <DataTable\n            title=\"Employee Directory\"\n            columns={columns}\n            // insert tableRows here ?? TableRows......\n            rows={TableRows}\n            data={API.fetchEmpData}\n            defaultSortFieldId={1}\n            sortIcon={<SortIcon />}\n            pagination\n            selectableRows\n            />\n        </Card>\n        </div>\n    );\n    }}\n      \n  const rootElement = document.getElementById(\"root\");\n\n  ReactDOM.render(<App />, rootElement);\n\n  export default Table;\n","import React from \"react\";\n\nfunction Header () {\n    return (\n        <div className=\"jumbotron\" >\n            <h1 className=\"display-4 text-center\">Employee Directory</h1>\n            <p className=\"lead\">View, sort or filter employees using the table.</p>\n        </div>\n    )\n}\n\n\n\nexport default Header;","// this is the \"smart container\"\n\nimport React, { useState, useEffect } from \"react\";\nimport Search from \"./Search\";\nimport Table from \"./Table\"\n// import tableRows from \"./TableRows\"\nimport Header from \"./Header\"\nimport API from \"../utils/API.js\"\n\n\nfunction Wrapper (props) {\n\n//users, filteredUsers, isSorted \nconst [users, setUsers] = useState([]);\nconst [isSorted, setIsSorted] = useState(false);\nconst [filtered, setFiltered] = useState([]);\nconst [search, setSearch] = useState(\"\");\n\n// GET USERS FUNCTION\n// first useEffect activates the callback function when component is initially rendered\nuseEffect(() =>{\nAPI.fetchEmpData().then((res)=>{\n    console.log(res)\n    setUsers(res)\n})\n// has an empty dependency\n}, [])\n\n// SORT FUNCTION\n// this useEffect method will check if isSorted changes to execute the callback function here\n//if sorted, change the look of the table\nuseEffect(() =>{\n\n}, [isSorted])\n\n// FILTER FUNCTION\nuseEffect(() =>{\n\n}, [filtered])\n\n// SEARCH FUNCTION \nconst searchHandler = () => {\n    setSearch()\n}\n\n// can only return one thing in a react app \nreturn (\n  <div>\n    <Header />\n    <Search results={search} handleInputChange={searchHandler} />\n    {/* complete table line below... */}\n    <Table/>\n  </div>\n);}\n\nexport default Wrapper;","import React from \"react\";\n// import './App.css';\nimport Wrapper from './components/Wrapper.js';\n\n// EDIT APP HERE\nfunction App() {\n  return (\n      <Wrapper></Wrapper>\n  );\n}\n\nexport default App;\n","// DONE\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// DONE\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}